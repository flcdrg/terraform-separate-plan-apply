trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

stages:
  - stage: Plan
    displayName: "Terraform Plan"
    jobs:
      - job: Plan
        displayName: "Terraform Plan"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1 # Need full name to avoid naming clash with other extension
            inputs:
              terraformVersion: "latest"

          - task: TerraformTaskV4@4
            displayName: Terraform init
            inputs:
              provider: "azurerm"
              command: "init"
              backendAzureRmUseEntraIdForAuthentication: true
              backendServiceArm: "rg-tf-plan-apply-australiaeast"
              backendAzureRmResourceGroupName: "rg-tfdemo-state-australiaeast"
              backendAzureRmStorageAccountName: "sttfdemostateausteast"
              backendAzureRmContainerName: "plan-apply-tfstate"
              backendAzureRmKey: "terraform.tfstate"
              workingDirectory: "terraform"

          # Use V4 tasks due to bug in V5 - https://github.com/microsoft/azure-pipelines-terraform/issues/299
          - task: TerraformTaskV4@4
            displayName: Terraform Plan
            inputs:
              provider: "azurerm"
              command: "plan"
              commandOptions: "-input=false -out=$(Build.ArtifactStagingDirectory)/plan.tfplan"
              environmentServiceNameAzureRM: "rg-tf-plan-apply-australiaeast"
              workingDirectory: "terraform"

          - task: PublishPipelineArtifact@1
            displayName: Publish Terraform Plan
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/plan.tfplan"
              artifact: "terraform-plan"
              publishLocation: "pipeline"

          - task: PublishPipelineArtifact@1
            displayName: Publish Terraform
            inputs:
              targetPath: terraform
              artifact: "terraform"
              publishLocation: "pipeline"

  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: # Only run this stage on main branch
      - stage: Apply
        displayName: "Terraform Apply"
        dependsOn: Plan
        jobs:
          - deployment: Apply
            displayName: "Terraform Apply"
            environment: EnvironmentApproval
            pool:
              vmImage: "ubuntu-latest"
            strategy:
              runOnce:
                deploy:
                  steps:
                    - download: current
                      artifact: terraform-plan

                    - task: DownloadPipelineArtifact@2
                      displayName: Download Terraform
                      inputs:
                        source: "current"
                        artifact: terraform
                        targetPath: terraform

                    - script: ls -alR
                      displayName: List files

                    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1 # Need full name to avoid naming clash with other extension
                      inputs:
                        terraformVersion: "latest"

                    - task: TerraformTaskV4@4
                      displayName: Terraform init
                      inputs:
                        provider: "azurerm"
                        command: "init"
                        backendAzureRmUseEntraIdForAuthentication: true
                        backendServiceArm: "rg-tf-plan-apply-australiaeast"
                        backendAzureRmResourceGroupName: "rg-tfdemo-state-australiaeast"
                        backendAzureRmStorageAccountName: "sttfdemostateausteast"
                        backendAzureRmContainerName: "plan-apply-tfstate"
                        backendAzureRmKey: "terraform.tfstate"
                        workingDirectory: "terraform"

                    - task: TerraformTaskV4@4
                      displayName: Terraform Apply
                      inputs:
                        provider: "azurerm"
                        command: "apply"
                        commandOptions: "-input=false -auto-approve -no-color $(Pipeline.Workspace)/terraform-plan/plan.tfplan"
                        environmentServiceNameAzureRM: "rg-tf-plan-apply-australiaeast"
                        workingDirectory: "terraform"
