# This pipeline uses a Cache task to cache Terraform files, rather than pipeline artifacts.
# Potentially problematic as the authentication for the apply stage may expire.

trigger: none

pr: none

stages:
  - stage: Plan
    displayName: "Terraform Plan"
    jobs:
      - job: Plan
        displayName: "Terraform Plan"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: Cache@2
            displayName: Terraform Cache
            inputs:
              key: terraform | $(Agent.OS) | "$(Build.BuildNumber)" | $(Build.SourceVersion)
              path: $(System.DefaultWorkingDirectory)/terraform

          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1 # Need full name to avoid naming clash with other extension
            inputs:
              terraformVersion: "latest"

          # Zip up terraform directory files. Do this before terraform init so we don't include the .terraform directory in the zip file.
          - task: ArchiveFiles@2
            displayName: "Archive Terraform"
            inputs:
              rootFolderOrFile: terraform
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/terraform.zip"
              replaceExistingArchive: true

          - task: TerraformTaskV4@4
            displayName: Terraform init
            inputs:
              provider: "azurerm"
              command: "init"
              backendAzureRmUseEntraIdForAuthentication: true
              backendServiceArm: "rg-tf-plan-apply-australiaeast"
              backendAzureRmResourceGroupName: "rg-tfdemo-state-australiaeast"
              backendAzureRmStorageAccountName: "sttfdemostateausteast"
              backendAzureRmContainerName: "plan-apply-tfstate"
              backendAzureRmKey: "terraform.tfstate"
              workingDirectory: "terraform"
              commandOptions: -input=false

          # Use V4 tasks due to bug in V5 - https://github.com/microsoft/azure-pipelines-terraform/issues/299
          - task: TerraformTaskV4@4
            displayName: Terraform Plan
            inputs:
              provider: "azurerm"
              command: "plan"
              commandOptions: "-input=false -out=plan.tfplan"
              environmentServiceNameAzureRM: "rg-tf-plan-apply-australiaeast"
              workingDirectory: "terraform"

  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: # Only run this stage on main branch
      - stage: Apply
        displayName: "Terraform Apply"
        dependsOn: Plan
        jobs:
          - deployment: Apply
            displayName: "Terraform Apply"
            environment: EnvironmentApproval
            pool:
              vmImage: "ubuntu-latest"
            strategy:
              runOnce:
                deploy:
                  steps:
                    - task: Cache@2
                      displayName: Terraform Cache
                      inputs:
                        key: terraform | $(Agent.OS) | "$(Build.BuildNumber)" | $(Build.SourceVersion)
                        path: $(System.DefaultWorkingDirectory)/terraform

                    - script: ls -alR
                      displayName: List files

                    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1 # Need full name to avoid naming clash with other extension
                      inputs:
                        terraformVersion: "latest"

                    - task: TerraformTaskV4@4
                      displayName: Terraform Apply
                      inputs:
                        provider: "azurerm"
                        command: "apply"
                        commandOptions: "-input=false -auto-approve -no-color plan.tfplan"
                        environmentServiceNameAzureRM: "rg-tf-plan-apply-australiaeast"
                        workingDirectory: "terraform"
